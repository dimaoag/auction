
ssh ${HOST} -p ${PORT} 'cd site_${BUILD_NUMBER} && docker-compose run --rm api-php-cli wait-for-it api-postgres:5432 --timeout=20 -- echo "api-postgres is up"'
ssh ${HOST} -p ${PORT} 'cd site_${BUILD_NUMBER} && docker-compose run --rm api-php-cli php bin/app.php migrations:migrate --no-interaction'

docker-compose run --rm api-php-cli composer app orm:validate-schema
docker-compose run --rm api-php-cli composer app mailer:check

docker-compose run --rm api-php-cli composer app migrations:diff
docker-compose run --rm api-php-cli composer app migrations:migrate
docker-compose run --rm api-php-cli php bin/app.php --ansi migrations:migrate --no-interaction



docker login -u USERNAME -p TOKEN docker.pkg.github.com
REGISTRY=docker.pkg.github.com/dimaoag/auction IMAGE_TAG=master-1 make build
REGISTRY=docker.pkg.github.com/dimaoag/auction IMAGE_TAG=master-1 make push

ssh-copy-id -i ~/.ssh/id_rsa.pub root@IP

ansible all -m ping -i hosts.yml

make upgrade
make site
make authorize
cd ..
HOST=user@IP PORT=22 REGISTRY=docker.pkg.github.com/dimaoag/auction IMAGE_TAG=master-1 BUILD_NUMBER=1 make deploy

docker-compose run --rm frontend-node-cli npx create-react-app react-app
docker-compose run --rm frontend-node-cli yarn install
docker-compose run --rm frontend-node-cli yarn build
docker-compose run --rm frontend-node-cli yarn test
docker-compose run --rm frontend-node-cli yarn test --watchAll=false
docker-compose run --rm frontend-node-cli yarn add eslint --dev
docker-compose run --rm frontend-node-cli npx eslint --init

// cucumber
docker-compose run --rm cucumber-node-cli yarn install

// all ENV properties
docker-compose run --rm api-php-cli env

// Testing in test-mode
make try-build


make try-testing-build
make try-testing-init
make try-testing-e2e





